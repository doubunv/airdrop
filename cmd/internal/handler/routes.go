// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	person "air-drop/cmd/internal/handler/person"
	"air-drop/cmd/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/swg",
				Handler: swgHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/getNonce",
				Handler: person.NonceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: person.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/adminLogin",
				Handler: person.AdminLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/person"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/invite/summary",
				Handler: person.InviteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/getInviter",
				Handler: person.GetInviterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/inviteCode/input",
				Handler: person.InviteCodeInputHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/inviteCode/changeSelf",
				Handler: person.InviteCodeChangeSelfHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/invite/count",
				Handler: person.InviteCountHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/userList",
				Handler: person.UserListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/userAddress/Register",
				Handler: person.CheckAddressRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/inviteList",
				Handler: person.InviteListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/person"),
	)
}
