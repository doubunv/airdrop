// Code generated by goctl. DO NOT EDIT.
package types

type GetNonceResp struct {
	Nonce string `json:"nonce"`
}

type LoginReq struct {
	UAddress  string `json:"uAddress"`
	PAddress  string `json:"pAddress"`
	ChainId   int64  `json:"chainId"`
	Timestamp int64  `json:"timestamp"`
	Signature string `json:"signature"`
	Nonce     string `json:"nonce"`
}

type LoginResp struct {
	Token string `json:"token"`
}

type AdminLoginReq struct {
	UAddress  string `json:"uAddress"`
	ChainId   int64  `json:"chainId"`
	Timestamp int64  `json:"timestamp"`
	Signature string `json:"signature"`
	Nonce     string `json:"nonce"`
}

type AdminLoginResp struct {
	Token string `json:"token"`
	Role  string `json:"role"`
}

type InviteReq struct {
	UAddress string `json:"uAddress"`
}

type InviteResp struct {
	Tribe       int `json:"tribe"`
	Recommender int `json:"recommender"`
}

type GetInviterResp struct {
	PAddress    string `json:"pAddress"`
	PInviteCode string `json:"pInviteCode"`
	InviteCode  string `json:"inviteCode"`
}

type InviteCodeReq struct {
	InviteCode string `json:"inviteCode"`
}

type InviteCountResp struct {
	Count       int64 `json:"count"`
	ActiveCount int64 `json:"active_count"`
	TeamLevel   int64 `json:"team_level"`
}

type UserAddressResgiterReq struct {
	UAddress string `form:"uAddress"`
}

type UserAddressResgiterResp struct {
	UAddress   string `json:"uAddress"`
	IsRegister bool   `json:"isRegister"`
}

type InviteUserReq struct {
	PageNo   int64 `form:"pageNo"`
	PageSize int64 `form:"pageSize"`
}

type InviteUserResp struct {
	List     []UserInviteItem `json:"list"`
	PageNo   int64            `json:"pageNo"`
	PageSize int64            `json:"pageSize"`
	Total    int64            `json:"total"`
}

type UserInviteItem struct {
	ID        int64  `json:"id"`
	UAddress  string `json:"u_address"`
	CreatedAt int64  `json:"created_at"`
}

type UserListReq struct {
	PageNo     int    `form:"pageNo"`
	PageSize   int    `form:"pageSize"`
	UAddress   string `form:"uAddress,optional"`
	PAddress   string `form:"pAddress,optional"`
	StartTime  string `form:"startTime,optional"`
	EndTime    string `form:"endTime,optional"`
	InviteCode string `form:"inviteCode,optional"`
}

type UserListResp struct {
	List     []UserItem `json:"list"`
	PageNo   int64      `json:"pageNo"`
	PageSize int64      `json:"pageSize"`
	Total    int64      `json:"total"`
}

type UserItem struct {
	Id            int64   `json:"id"`
	UAddress      string  `json:"u_address"`
	ParentAddress string  `json:"parent_address"`
	Amount        float64 `json:"amount"`
	InviteCode    string  `json:"invite_code"`
	Path          string  `json:"path"`
	CreateAt      string  `json:"create_at"`
}
